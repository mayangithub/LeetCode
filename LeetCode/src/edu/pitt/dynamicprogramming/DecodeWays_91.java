/**
 * 
 */
package edu.pitt.dynamicprogramming;

/**
 * Decode Ways #91 --- Accepted 300ms
 *  A message containing letters from A-Z is being encoded to numbers using the following mapping:
 *  'A' -> 1
 *  'B' -> 2
 *  ...
 *  'Z' -> 26
 *  Given an encoded message containing digits, determine the total number of ways to decode it.
 * For example,
 *  Given encoded message "12", it could be decoded as "AB" (1 2) or "L" (12).
 *  The number of ways decoding "12" is 2. 
 * @author yanma
 * @since 2015-05-20
 * @version 2015-05-20
 */
public class DecodeWays_91 {

    public static int numDecodings(String s) {
    	
    	if (s == null || s.length() == 0 || s.charAt(0) == '0') {
    		return 0;
    	} else if (s.length() == 1) {
    		return 1;
    	}
    	
    	int length = s.length();
    	int[] count = new int[length + 1];
    	count[length] = 1;
    	count[length - 1] = s.charAt(length - 1) == '0'? 0: 1; //if last digit != 0, one decode way
    	
    	for (int index = length - 2; index >= 0; index--) {
    		if (s.charAt(index) == '0') {
    			continue;
    		} else if (Integer.valueOf(s.substring(index, index + 2)) <= 26 && Integer.valueOf(s.substring(index, index + 2))  >= 1) {
    			count[index] = count[index + 2] + count[index + 1];
    		} else if (Integer.valueOf(s.substring(index, index + 2)) > 26 || Integer.valueOf(s.substring(index, index + 2))  < 1) {
    			count[index] = count[index + 1];
    		}
    	}
    	
    	return count[0];
    }
	
    
	
	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub

//		String string = "9371597631128776948387197132267188677349946742344217846154932859125134924241649584251978418763151253";
//		String string = "12227";
//		String string = "4757562545844617494555774581341211511296816786586787755257741178599337186486723247528324612117156948";
		String string
//		String string = "123";
		System.out.println("count: " + numDecodings(string));
	}

}
